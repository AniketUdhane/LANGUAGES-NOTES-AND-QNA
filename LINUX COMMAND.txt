If you are using Debian or Ubuntu Linux, type the following apt-get command to install GNU c/c++ compiler:
$ sudo apt-get update
$ sudo apt-get install build-essential manpages-dev


Step #2: Verify installation
Type the following command to display the version number and location of the compiler on Linux:
$ whereis gcc
$ which gcc
$ gcc --version


Writing the program
Now we need to write the “Hello, World!” program. Because this is a simple application, you can use the Nano editor. Open a terminal window and issue the command:

$ nano hello.cpp

That command will create a new file, named hello.cpp

Save and close the file with the keyboard shortcut [Ctrl]+[X] and then type “y” (no quotes) to use the name we gave the file from the start.

At this point you now have your C++ file, hello.cpp, ready to compile.

Compiling the program
The next step is to compile our newly-written program. The command to do this is really quite simple. The basic command is:

$ g++ hello.cpp

That command will compile the program and create an executable file named a.out. Not very helpful, right? So instead of letting g++ name the executable, let’s give it the name hello, by using the output option (-o) with the command:

$ g++ -o hello hello.cpp

The above command will compile the hello.cpp file and create a new executable binary, named hello.

Running the new program
Now that you’ve used g++ to compile your program, it’s time to run it. Because this is a terminal-only application, you have to run it from within the terminal as a command. To do this, issue the command:

$ ./hello

When you run the above command, you should see the output of the Hello

 To find out what directories are in your $PATH, issue the command:

$ echo $PATH

This will list out every directory in your $PATH

All of the directories in a user $PATH.

A safe bet is always /usr/local/bin. Copy that binary file with the command:

$ sudo cp hello /usr/local/bin

Now, all you have to do is issue the command hello to see the output of the Hello, World! program.


$ cd ..
back the directory

$ cd /mnt/d
to open folder in terminal

$ mkdir file_name
command to create folder

$ touch file_name.txt
to create text file

$ mv file_name.txt folder_name/
to move file into folder

$ cp file_name.txt folder_name/
to copy the file

$ sudo apt-get update

$ sudo apt upgrade

$ touch .file_name
to create hidden file

$ ls -a
to show hidden files


$ history
to show all command that are run

$ echo statement
to print 

$ printf "statement"
to print

$ ps

$ top

$ ps -a

$ ls
to show documents

$ ls -l
show the file info with access(read,write,execute)
the -l option tells ls to provide a long listing

$ man ls

$ ls --help

$ clear 
clear the terminal

$ help

$ apropos list

$ ls -l folder_name
shows folders and files in folder_name

$ stat filename.txt
gives information about file

$ df -h /
to show the disk space in human readable form

file - determine file type
stat - display file status

$ file filename

$ stat filename

$ pwd 
working directory

$ ls -R folder_name
show aal the files folder in folder_name

$ rm filename
remove the file

$ sudo ls /root
after this command type password and then type 
$ sudo -s
this command will open root 
# exit
this command will exit the root

$ ./test.sh

$ ls -l test.sh

$ chmod 

$ chmod 644 test.sh
$ chmod -x test.sh
$ bash test.sh

$ cat filename.extension
to see the content of file

$ chmod u-r test.sh
user minus read it takes the read permission away from the user

$ chmod 644 test.sh
the owner of the file has read and write access, while 
the group members and other users on the system only have read access

$ chmod 244 test.sh
sets permissions so that, (U)ser / 
owner can't read, can write and can't execute

$ chmod 744 test.sh
sets read, write and execute for the owner and 
read only for the group and all others.

$ sudo chown root test.sh
changes the user and group of the specified file or 
directory to user root and group root

$ ln -s p.txt w.txt
links the p.txt file to the w.txt ==>  w.txt -> p.txt

$ rm report.txt output.txt
This command would attempt to remove the files report.txt and output.txt.

grep command searches files for matching patterns

awk - often used to extract specific text file from a file according to a rule
awk programs can be written at the command line or stored in a file

sed is a stream editor
often used for modifying text in a command pipeline or in place

rev - prints text in reverse sequence
tac - concatenates or displays files in reverse
tr - translates or modifies individual character according to parameters

editing text with vim
the vi tool was a populaer text editor
the Vim tool is an improved version with modern features

tape archives 
put many files together into one file
.tar fiels are a common way to apckage and distribute software and data
data compression (space saving) is optional
compressed formats: .tar.gz, .tgz, .tar.bz2

data compression
the zip and unzip commands can create and open compresses data
archive files called zip files



